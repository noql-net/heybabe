name: Release Build

on:
  workflow_dispatch:
  push:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

          - goos: android
            goarch: arm64

          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: arm
            goarm: 7

          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: arm64

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Show workflow information
        run: |
          export _NAME=$GOOS-$GOARCH$GOARM$GOMIPS
          echo "GOOS: $GOOS, GOARCH: $GOARCH, GOARM: $GOARM, GOMIPS: $GOMIPS, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
          echo "REF=${GITHUB_SHA::6}" >> $GITHUB_ENV

      - name: Extract version from main.go
        id: version
        run: |
          set -e
          VERSION=$(grep -Eo 'version[[:space:]]*=[[:space:]]*"[^"]+"' main.go | head -n1 | sed -E 's/.*"([^"]+)"/\1/')
          if [ -z "$VERSION" ]; then
            echo "::error::Failed to detect version constant in source code"
            exit 1
          fi
          echo "Detected version: $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          # expose as step output
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Create git tag if needed
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "github-actions@users.noreply.github.com"
          git fetch --tags --quiet
          if git rev-parse "refs/tags/v${VERSION}" >/dev/null 2>&1; then
            echo "Tag v${VERSION} already exists"
          else
            git tag -a "v${VERSION}" -m "v${VERSION}"
            git push origin "v${VERSION}"
          fi

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true
          cache: false

      - name: Build heybabe
        run: |
          go build -v -o bin/heybabe_${{ env.ASSET_NAME }} -trimpath -ldflags "-s -w -buildid= -X main.version=${VERSION}" .

      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: heybabe_${{ env.ASSET_NAME }}_${{ env.REF }}
          path: ./bin/heybabe_${{ env.ASSET_NAME }}

    outputs:
      version: ${{ steps.version.outputs.version }}

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create / Update GitHub Release and upload binaries
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ needs.build.outputs.version }}
          name: v${{ needs.build.outputs.version }}
          draft: false
          prerelease: false
          files: |
            dist/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

